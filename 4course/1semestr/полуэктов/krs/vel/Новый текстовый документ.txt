_myvect .sect"myvect" ;Созданем секцию для векторов прерываний
reset .word _c_int00 ;RESET вектор
.space 1 ;Резервируем место для NMI прерывания
_mytrap .sect"mytrap" ;Секция для векторов программных прерываний
_mystack .usect"mystrack",100 ;Резервируем 100 слова под стек
            .text
stacka      .word _mystack ;адрес mystrack секции
ivta  .word _myvect ;адрес myvect секции
tvta  .word _mytrap ;адрес mytrap секции
ieval .word 1 ;значения регистра разрешения прерываний
gctrl .word 1EF78000h ;значение регистра управления памятью
lctrl .word 1EF78000h ;значение регистра управления памятью
mctrla      .word 100000h ;адрес регистра управления глобольной памятью
_c_int00: ;точка входа в программу, при reset начинаем отсюда
; Инициализация регистра DP
           ldp stacka;
;Устанавливаем указатель на таблицу прерываний
           ldi@ivta, AR0
           ldpe AR0, IVTP;
;Устанавливаем укзатель на таблицу программных прерываний           
           ldi@tvta, AR0
           ldpe AR0,TVTP
;Иницилизирум трегистр управления глобольной паматью
           ldi@mctrla, AR0
           ldi @gctrl,R0
           sti R0, *AR0
;Инициализируем регистр управления локальной памятью
           ldi@lctrl, R0
           sti R0, *+AR0(4)
;Инициализируем указатель стека
           ldi@stacka, SP
;Инициализируем регистр разрешения прерываний
;Запись 1 в IIE разрешает прерывание таймер
           ldi @ieval,IIE
;Глобально разрешаем прерывания, очищаем и размещаем кэш
           or 3800h, ST
           BR begin ;переход к началу приложения
      nop
      nop
      nop
begin ;Начало программы 
;Размещаем данные
	.data
a			.word 1
x			.word 2
y			.word 3
;Код прог в секции text
			.text
	ldi @a,R0
	ldi @x,R1
	ldi @y,R2
;вычисляем ADDC3
	ADDC3 R0, R1, R2 			
stop br stop
    nop
    nop
    nop
.end
