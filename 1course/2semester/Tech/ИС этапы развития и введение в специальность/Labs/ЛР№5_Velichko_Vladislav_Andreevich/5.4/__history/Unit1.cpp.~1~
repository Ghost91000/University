//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
//Объявление функции считывания записи
int GetLine(int f, AnsiString *st);
//объявление структуры
struct TStudent
{
AnsiString Fam,Inic,Grup,D1,D2;
};
//---------------------------------------------------------------------------
float
i;
void __fastcall TForm1::Button6Click(TObject *Sender)
{
Form1->Close();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Label1Click(TObject *Sender)
{
int i,j;
int index,index0;
int num;
int Lstr;
String Lst;
TStudent Student1;
Student1.Fam = InputBox("Ввод данных о студенте", "Введите фамилию",Name);
Student1.Inic = InputBox("Ввод данных о студенте", "Введите инициалы", "Пусто");
Student1.Grup = InputBox("Ввод данных о студенте", "Введите группу","Пусто");
Student1.D1 = InputBox("Ввод данных о студенте", "ИС", "Пусто");
Student1.D2 = InputBox("Ввод данных о студенте", "Введите оценку по ИТ", "Пусто");
//определение числа строк в таблице
index0 = StringGrid1->RowCount;
// определение номера последней записи for (i=0; i <index0;i++)
{
Lst= StringGrid1->Cells[1][i];
Lstr =Lst.Length(); //определение длины записи в 1-м столбце i-ой строки
if (Lstr==0) break;
index = i; // индекс последней записи
}
//проверка необходимости увеличения числа строк на 1
if(index <(index0 -1)) StringGrid1->RowCount=(index0+1);
num=index +1; // индекс следующей записи
StringGrid1->Cells[0][num]= num;// запись номера по порядку
//добавление следующей записи в таблицу
StringGrid1->Cells[1][num]=Student1.Fam;
StringGrid1->Cells[2][num]=Student1.Inic;
StringGrid1->Cells[3][num]=Student1.Grup;
StringGrid1->Cells[4][num]=Student1.D1;
StringGrid1->Cells[5][num]=Student1.D2;
}
//--------------------------------------------------------------------
//функция для обработки события командной кнопки «Исправить таблицу»

//---------------------------------------------------------------------------
void __fastcall TForm1::Button2Click(TObject *Sender)
{
StringGrid1->Enabled=true; //открытие доступа к таблице
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button5Click(TObject *Sender)
{
StringGrid2->Visible = true;
AnsiString s1,s2;
s1 = Edit1->Text;
for (i=1; i<=StringGrid1->RowCount; i++)
{
s2= StringGrid1->Cells[1][i];
if(s1==s2) break;
}
StringGrid2->Rows[1]=StringGrid1->Rows[i];
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
int f; //дискриптор файла
//открыть существующий файл, если его нет, создать новый
if (FileExists("tab1.grd"))
f= FileOpen("tab1.grd",fmOpenWrite); // Открыть файл на запись
else
f = FileCreate("tab1.grd");
if (f!=-1)
{
for (int i =1; i<StringGrid1->RowCount; i++)
{
// формирование строки, оканчивающейся символами конец строки и перевод каретки
AnsiString st = StringGrid1->Rows[i]->DelimitedText+"\r\n";
FileWrite(f,st.c_str(), st.Length()); //запись строки в файл
}
FileClose(f);//закрытие файла
}
else
ShowMessage("ошибка доступа к файлу");
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button4Click(TObject *Sender)
{
int f;
AnsiString st;
bool f1=true;
if((f = FileOpen("tab1.grd",fmOpenRead))==-1)
return;
while (GetLine(f,&st) !=0)
{
if (f1)
{
StringGrid1->Rows[StringGrid1->Row] -> DelimitedText= st;
f1= false;
} else
{
StringGrid1->RowCount++;
StringGrid1->Row = StringGrid1->RowCount -1;
StringGrid1->Rows[StringGrid1->Row]-> DelimitedText=st;
}
}
FileClose(f);
}
//читает из файла строку символов
//от текущей позиции до символа конец строки
//значение функции количество прочитанных символов
int GetLine (int f, AnsiString *st)
{
unsigned char buf[256]; //задаем величину буфера для считывания символов строки
unsigned char *p = buf;// указатель на строку
int n;//количество прочитанных байт
int len = 0;// длина строки
n = FileRead(f,p,1); // стандартная функция считывания байт из файла
while (n!= 0)
{
if(*p =='\r')
{
n = FileRead(f,p,1); //считывание символов строки
break;
}
len++;
p++;
n = FileRead(f,p,1);
}
*p = '\0';
if (len !=0)// если длина записи не равна 0. Считанные байты из буфера записываются в переменную st
st -> printf("%s",buf);
return len;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormCreate(TObject *Sender)
{
StringGrid1->Cells[0][0]= "№ п/п";
StringGrid1->Cells[1][0]= "Фамилия";
StringGrid1->Cells[2][0]= "Инициалы";
StringGrid1->Cells[3][0]= "Группа";
StringGrid1->Cells[4][0]= "ИС";
StringGrid1->Cells[5][0]= "ИТ";
StringGrid1->Options << goEditing;// разрешение непосредственного доступа к полям таблицы
StringGrid1->Options << goTabs; // Перемещение по полям таблицы с помощью клавиши Tab
//присваивание наименований столбцам таблицы 2
StringGrid2->Cells[0][0]= "№ п/п";
StringGrid2->Cells[1][0]= " Фамилия ";
StringGrid2->Cells[2][0]= " Инициалы ";
StringGrid2->Cells[3][0]= " Группа ";
StringGrid2->Cells[4][0]= " ИС";
StringGrid1->Cells[5][0]= " ИТ";
}
//---------------------------------------------------------------------------
